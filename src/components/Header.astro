---
import { Code, Menu, X } from 'lucide-react';
---

<header class="fixed top-0 w-full bg-gray-900/95 backdrop-blur-md z-50 border-b border-gray-800/50">
  <nav class="container mx-auto px-4 py-4">
    <div class="flex items-center justify-between">
      <a href="#" class="flex items-center gap-3 group">
        <img src="/autimind_logo_sq300.png" alt="AutiMind Logo" class="w-12 h-12 rounded-full" />
        <span class="text-2xl font-bold bg-gradient-to-r from-teal-400 to-orange-400 bg-clip-text text-transparent">
          AutiMind
        </span>
      </a>
      
      <div class="hidden md:flex items-center gap-8">
        <a href="#about" class="text-gray-300 hover:text-teal-400 transition-colors relative group">
          About
          <span class="absolute -bottom-1 left-0 w-0 h-0.5 bg-teal-400 transition-all group-hover:w-full"></span>
        </a>
        <a href="/services" class="text-gray-300 hover:text-orange-400 transition-colors relative group">
          AI Services
          <span class="absolute -bottom-1 left-0 w-0 h-0.5 bg-orange-400 transition-all group-hover:w-full"></span>
        </a>
        <a href="/industries" class="text-gray-300 hover:text-teal-400 transition-colors relative group">
          Industries
          <span class="absolute -bottom-1 left-0 w-0 h-0.5 bg-teal-400 transition-all group-hover:w-full"></span>
        </a>
        <a href="/products" class="text-gray-300 hover:text-orange-400 transition-colors relative group">
          Our Work
          <span class="absolute -bottom-1 left-0 w-0 h-0.5 bg-orange-400 transition-all group-hover:w-full"></span>
        </a>
        <a href="#contact" class="text-gray-300 hover:text-teal-400 transition-colors relative group">
          Contact
          <span class="absolute -bottom-1 left-0 w-0 h-0.5 bg-teal-400 transition-all group-hover:w-full"></span>
        </a>
      </div>
      
      <button class="md:hidden text-gray-300 hover:text-teal-400 transition-colors" id="mobile-menu-toggle">
        <Menu className="w-6 h-6" id="menu-icon" style={{display: "block"}} />
        <X className="w-6 h-6" id="close-icon" style={{display: "none"}} />
      </button>
    </div>
    
    <!-- Mobile Menu -->
    <div class="md:hidden fixed inset-0 bg-gray-900/95 backdrop-blur-md z-40 transform -translate-x-full transition-transform duration-300 ease-in-out" id="mobile-menu">
      <div class="flex flex-col items-center justify-center h-full space-y-8">
        <a href="#about" class="text-2xl text-gray-300 hover:text-teal-400 transition-colors mobile-menu-link">
          About
        </a>
        <a href="/services" class="text-2xl text-gray-300 hover:text-orange-400 transition-colors mobile-menu-link">
          AI Services
        </a>
        <a href="/industries" class="text-2xl text-gray-300 hover:text-teal-400 transition-colors mobile-menu-link">
          Industries
        </a>
        <a href="/products" class="text-2xl text-gray-300 hover:text-orange-400 transition-colors mobile-menu-link">
          Our Work
        </a>
        <a href="#contact" class="text-2xl text-gray-300 hover:text-teal-400 transition-colors mobile-menu-link">
          Contact
        </a>
      </div>
    </div>
  </nav>
</header>

<script>
  const menuToggle = document.getElementById('mobile-menu-toggle');
  const mobileMenu = document.getElementById('mobile-menu');
  const menuIcon = document.getElementById('menu-icon');
  const closeIcon = document.getElementById('close-icon');
  const header = document.querySelector('header');
  const mobileMenuLinks = document.querySelectorAll('.mobile-menu-link');
  
  let isMenuOpen = false;
  
  // Toggle mobile menu
  menuToggle?.addEventListener('click', () => {
    isMenuOpen = !isMenuOpen;
    
    if (isMenuOpen) {
      mobileMenu?.classList.remove('-translate-x-full');
      mobileMenu?.classList.add('translate-x-0');
      if (menuIcon) menuIcon.style.display = 'none';
      if (closeIcon) closeIcon.style.display = 'block';
      document.body.style.overflow = 'hidden';
    } else {
      mobileMenu?.classList.add('-translate-x-full');
      mobileMenu?.classList.remove('translate-x-0');
      if (menuIcon) menuIcon.style.display = 'block';
      if (closeIcon) closeIcon.style.display = 'none';
      document.body.style.overflow = 'auto';
    }
  });
  
  // Close menu when clicking on a link
  mobileMenuLinks.forEach(link => {
    link.addEventListener('click', () => {
      if (isMenuOpen) {
        isMenuOpen = false;
        mobileMenu?.classList.add('-translate-x-full');
        mobileMenu?.classList.remove('translate-x-0');
        if (menuIcon) menuIcon.style.display = 'block';
        if (closeIcon) closeIcon.style.display = 'none';
        document.body.style.overflow = 'auto';
      }
    });
  });
  
  // Close menu when clicking outside
  mobileMenu?.addEventListener('click', (e) => {
    if (e.target === mobileMenu && isMenuOpen) {
      isMenuOpen = false;
      mobileMenu?.classList.add('-translate-x-full');
      mobileMenu?.classList.remove('translate-x-0');
      if (menuIcon) menuIcon.style.display = 'block';
      if (closeIcon) closeIcon.style.display = 'none';
      document.body.style.overflow = 'auto';
    }
  });
  
  // Header background change on scroll
  window.addEventListener('scroll', () => {
    if (window.scrollY > 100) {
      header?.classList.add('bg-gray-900/98');
      header?.classList.remove('bg-gray-900/95');
    } else {
      header?.classList.add('bg-gray-900/95');
      header?.classList.remove('bg-gray-900/98');
    }
  });
  
  // Smooth scrolling for anchor links
  document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
      e.preventDefault();
      const href = (e.target as HTMLAnchorElement).getAttribute('href');
      const target = href ? document.querySelector(href) : null;
      if (target) {
        target.scrollIntoView({
          behavior: 'smooth',
          block: 'start'
        });
      }
    });
  });
</script>